{"version":3,"sources":["components/utilities/api.js","components/Account.js","components/Posts.js","components/FeaturedPost.js","components/Home.js","components/App.js","index.js"],"names":["STRANGER_API_URL","apiCall","url","method","token","body","data","fetch","setToken","getFetchOPtions","response","json","error","console","toUpperCase","headers","JSON","stringify","Object","assign","loginUser","username","password","user","login","log","registerUser","registration","getUserData","submitMessage","postId","message","content","fetched","Account","setUser","UserData","setUserData","useState","setUsername","setPassword","isRegistering","setIsRegistering","handleSubmit","event","preventDefault","className","onClick","onSubmit","onChange","target","value","required","name","type","placeholder","Posts","posts","setPosts","setFeaturedPost","featuredPost","search","setSearch","title","setTitle","description","setDescription","price","setPrice","location","setLocation","willDeliver","setWillDeliver","getPosts","submitPost","post","newPost","deletePost","postID","deletedPost","history","useHistory","useEffect","handleDelete","e","stopPropagation","window","confirm","handleNewPost","filter","author","toLowerCase","includes","searchMatches","map","push","_id","alert","handleFeaturedClick","isAuthor","messages","FeaturedPost","setMessage","handleSubmitMessage","newMessage","newArr","useParams","Home","id","idx","fromUser","index","App","setNewMessage","exact","to","activeClassName","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e8f9a086.chunk.js","sourcesContent":["const STRANGER_API_URL = 'https://strangers-things.herokuapp.com/api/2204-FTB-MT-WEB-PT'\r\n\r\nexport const apiCall = async (url, method = 'GET', token, body) => {\r\n    let data = false;\r\n    try {\r\n        const response = await fetch(\r\n            STRANGER_API_URL + url,\r\n            setToken(getFetchOPtions(method, body), token)\r\n        );\r\n        data = await response.json();\r\n\r\n        if (data.error) {\r\n            throw data.error;\r\n        }\r\n\r\n    } catch (e) {\r\n        console.error(e);\r\n    }\r\n\r\n    return data;\r\n}\r\n\r\nconst getFetchOPtions = (method, body) => {\r\n    return {\r\n        method: method.toUpperCase(),\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(body)\r\n    }\r\n}\r\n\r\nconst setToken = (body, token) => {\r\n    if (token) {\r\n        body.headers = Object.assign(body.headers, { 'Authorization': `Bearer ${token}` })\r\n    }\r\n    return body;\r\n}\r\n\r\n// Use below to set the endpoints for each component that will be used/directed to\r\n\r\n\r\nexport const loginUser = async (username, password) => {\r\n    const login = await apiCall(\"/users/login\", \"POST\", null, {\r\n        user: { username, password }\r\n    })\r\n    const user = await apiCall(\"/users/me\", 'GET', login.data.token)\r\n    console.log('im the user', user)\r\n    return {\r\n        user: user.data,\r\n        token: login.data.token\r\n    };\r\n}\r\n\r\nexport const registerUser = async (username, password) => {\r\n    const registration = await apiCall(\"/users/register\", \"POST\", null, {\r\n        user: { username, password }\r\n    })\r\n    const user = await apiCall(\"/users/me\", null, registration.data.token)\r\n    console.log('new one this time', user)\r\n    return {\r\n        user: registration.data.user,\r\n        token: registration.data.token\r\n    };\r\n}\r\n\r\nexport const getUserData = async (token) => {\r\n    const data = await apiCall(`/users/me`, 'GET', token)\r\n    console.log('am i getting this?', data)    \r\n    return data\r\n}\r\n\r\nexport const submitMessage = async (token, postId, message) => {\r\n    const fetched = await apiCall(`/posts/${postId}/messages`, \"POST\", token,\r\n    {   \r\n        message: {content: message}\r\n    })\r\n    return fetched\r\n}\r\n\r\n","import React, { useState } from \"react\";\r\nimport { loginUser, registerUser, getUserData, } from \"./utilities/api\";\r\n\r\nconst Account = ({user, setUser, token, setToken, UserData, setUserData}) => {\r\n    const [username, setUsername] = useState ('');\r\n    const [password, setPassword] = useState ('');\r\n    const [isRegistering, setIsRegistering] = useState (false);\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        if (isRegistering) {\r\n            const {user, token} = await registerUser(username, password);\r\n            setUser(user);\r\n            setToken(token);\r\n        } else {\r\n            const {user, token} = await loginUser(username, password);\r\n            setUser(user);\r\n            setToken(token);\r\n\r\n            const response = await getUserData(token);\r\n            setUserData(response.data)\r\n            console.log('hereaskjdfhlaskdf', response)\r\n        }\r\n    }\r\n    \r\n    const handleLogout = () => {\r\n        setUser(false);\r\n        setToken('');\r\n    }\r\n    \r\n    const toggleRegistration = () => {\r\n        setIsRegistering(!isRegistering);\r\n    }\r\n    \r\n    console.log('fetched user data', UserData)\r\n\r\n    return <>\r\n    {\r\n        (user && token) ?\r\n        <>\r\n        <h1>User Profile</h1>\r\n        <p className=\"user-profile-name\">Username: {user.username}</p>\r\n        <button className=\"button\" onClick={handleLogout}>Logout</button> \r\n\r\n        </> :\r\n        <>\r\n        <h1>{isRegistering ? \"Registration\" : \"Login\"} </h1>\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n            className=\"input-text\"\r\n            onChange={(event) => setUsername(event.target.value) }\r\n            required\r\n            name=\"username\"\r\n            type=\"text\"\r\n            placeholder=\"Username\"\r\n            value={username}\r\n            ></input>\r\n            <input\r\n            className=\"input-text\"\r\n            onChange={(event) => setPassword(event.target.value)}\r\n            required\r\n            name=\"password\"\r\n            type=\"text\"\r\n            placeholder=\"Password\"\r\n            value={password}\r\n            ></input>\r\n        <button className=\"button\" type=\"submit\">Submit</button>\r\n        </form>\r\n        <button className=\"button\" onClick={toggleRegistration}>Register/Login</button>\r\n        </>\r\n    }\r\n    </>\r\n}\r\n\r\n// add in a way to view just the users posts.\r\nexport default Account;","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { apiCall } from \"./utilities/api\";\r\n\r\n//this page should only be available to people who have logged in, first check to see if someone has the correct login token\r\n\r\nconst Posts = ({ posts, setPosts, user, token, featuredPost, setFeaturedPost }) => {\r\n    const [search, setSearch] = useState('');\r\n    const [title, setTitle] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [price, setPrice] = useState('');\r\n    const [location, setLocation] = useState('');\r\n    const [willDeliver, setWillDeliver] = useState('false');\r\n\r\n\r\n    // did not condense the use effect function since this was easier for me to understand\r\n    const getPosts = async () => {\r\n        const fetched = await apiCall('/posts', 'GET', token)\r\n        setPosts(fetched.data.posts)\r\n        console.log(fetched.data.posts)\r\n    }\r\n\r\n    const submitPost = async (token, title, description, price, location, willDeliver) => {\r\n        const fetched = await apiCall(\r\n            '/posts',\r\n            'POST',\r\n            token,\r\n            { post: { title, description, price, location, willDeliver } }\r\n        )\r\n        const newPost = await getPosts(token)\r\n        return newPost\r\n    }\r\n\r\n    const deletePost = async (postID) => {\r\n        const fetched = await apiCall(`/posts/${postID}`, 'DELETE', token)\r\n        const deletedPost = await getPosts\r\n        return deletedPost\r\n    }\r\n\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        getPosts();\r\n    }, [])\r\n\r\n\r\n    const searchMatches = (search, post) => {\r\n        return `${post.title} ${post.author.username} ${post.description}`\r\n            .toLowerCase()\r\n            .includes(search.toLowerCase())\r\n    }\r\n\r\n    const handleDelete = async (e, postID) => {\r\n        e.stopPropagation();\r\n        if (window.confirm('Delete Post?'))\r\n            deletePost(postID)\r\n    }\r\n\r\n    const handleFeaturedClick = (e, post) => {\r\n        if (user && token) {\r\n            setFeaturedPost(post);\r\n            history.push(`/posts/${post._id}`)\r\n        } else {\r\n            alert('Please Log In to View this Post')\r\n        }\r\n    }\r\n\r\n    const handleNewPost = async (e) => {\r\n        e.preventDefault();\r\n        const newPost = await submitPost(token, title, description, price, location, willDeliver);\r\n        getPosts();\r\n    }\r\n\r\n\r\n    return <>\r\n        <h1 className=\"posts-title\">Items for Sale</h1>\r\n\r\n        <input className=\"input-text\" onChange={(e) => {\r\n            setSearch(e.target.value)\r\n        }}\r\n            type=\"text\" name=\"search\" placeholder=\"Search Listings\"\r\n        />\r\n\r\n        <ul className=\"post-body\">\r\n            {\r\n                posts.filter(post => {\r\n                    return searchMatches(search, post)\r\n                }).map(post => {\r\n                    return <li className=\"item-body\" key={post._id} onClick={(e) => { handleFeaturedClick(e, post) }}>\r\n                        <div>Item for Sale: {post.title}</div>\r\n\r\n                        {post.location && <div>Location: {post.location} </div>}\r\n\r\n                        <div>Description: {post.description}</div>\r\n\r\n                        <div>Price: {post.price}</div>\r\n                        <ul>\r\n\r\n                            {user && post.isAuthor &&\r\n                                post.messages.map(message => {\r\n                                    return <li key={message._id}>{message.content}</li>\r\n                                })\r\n                            } \r\n                        </ul>\r\n\r\n                        <div>Will Deliver: {post.willDeliver ? 'Yes' : 'No'} </div>\r\n                        <div>Posted By: {post.author.username}</div>\r\n                        {user && post.isAuthor && <button\r\n                            className=\"button\"  \r\n                            onClick={(e) => handleDelete(e, post._id)}\r\n                        >Delete</button>\r\n                        }\r\n                    </li>\r\n                })\r\n            }\r\n        </ul>\r\n\r\n        {user && token && (\r\n            <form className=\"item-submit\" onSubmit={handleNewPost}>\r\n                <div>Item Name</div>\r\n                <input\r\n                    className=\"input-text\"\r\n                    onChange={(e) => setTitle(e.target.value)}\r\n                    type='text' name='itemName'\r\n                    placeholder=\"Required\"\r\n                    value={title}\r\n                />\r\n\r\n                <div>Description</div>\r\n                <input \r\n                className=\"input-text\"\r\n                    onChange={(e) => setDescription(e.target.value)}\r\n                    type='text' name='itemDescription'\r\n                    placeholder=\"Required\"\r\n                    value={description}\r\n                />\r\n\r\n                <div>Price</div>\r\n                <input\r\n                className=\"input-text\"\r\n                    onChange={(e) => setPrice(e.target.value)}\r\n                    type='text' name='itemPrice'\r\n                    placeholder=\"Item Required\"\r\n                    value={price}\r\n                />\r\n\r\n                <div>Location</div>\r\n                <input\r\n                className=\"input-text\"\r\n                    onChange={(e) => setLocation(e.target.value)}\r\n                    type='text' name='itemLocation'\r\n                    placeholder=\"Required\"\r\n                    value={location}\r\n                />\r\n\r\n                <div>Will Deliver Item</div>\r\n                {!willDeliver &&\r\n                    <p>Yes</p>\r\n                }\r\n                <input\r\n                className=\"input-text\"\r\n                    onChange={(e) => setWillDeliver(!willDeliver)}\r\n                    type='checkbox' name='itemDeliver'\r\n                />\r\n                <button className=\"button\" type=\"submit\">Submit Post</button>\r\n            </form>\r\n        )}\r\n\r\n    </>\r\n}\r\n\r\n\r\nexport default Posts;","import React from \"react\";\r\nimport { useHistory, useParams, } from \"react-router-dom\";\r\nimport { submitMessage } from \"./utilities/api\";\r\n\r\n\r\nconst FeaturedPost = ({\r\n    user,\r\n    token,\r\n    featuredPost,\r\n    setFeaturedPost,\r\n    message,\r\n    setMessage,\r\n}) => {\r\n\r\n    const history = useHistory();\r\n    \r\n\r\n    const handleSubmitMessage = async (e) => {\r\n        e.preventDefault();\r\n        const newMessage = await submitMessage(token, featuredPost._id, message,);\r\n        const newArr = ([newMessage, ...featuredPost.messages]);\r\n        const newPost = Object.assign(featuredPost, {messages: newArr});\r\n        setFeaturedPost(newPost);\r\n        setMessage('')\r\n    }\r\n\r\n    const handleClose =(e) => {\r\n        setFeaturedPost(false);\r\n        history.push('/posts');\r\n\r\n    }\r\n\r\n    const { postId } = useParams();\r\n\r\n\r\n\r\n\r\n    return featuredPost ? <div className=\"featured-post\">\r\n        <h1>{featuredPost.title}</h1>\r\n\r\n        {featuredPost.location && <div>Location: {featuredPost.location} </div>}\r\n\r\n        <div>Description: {featuredPost.description}</div>\r\n\r\n        <div>Price: {featuredPost.price}</div>\r\n\r\n        <ul>\r\n            {user && featuredPost.isAuthor &&\r\n                featuredPost.messages.map(message => {\r\n                    return <li key={message._id}>{message.content}</li>\r\n                })\r\n            }\r\n        </ul>\r\n\r\n\r\n        <div>Will Deliver: {featuredPost.willDeliver ? 'Yes' : 'No'} </div>\r\n        <div>Posted By: {featuredPost.author.username}</div>\r\n\r\n        {user && token && !featuredPost.isAuthor && <form className=\"MessageSection\" onSubmit={handleSubmitMessage}>\r\n            <input\r\n            className=\"input-text\"\r\n                onChange={(e) => setMessage(e.target.value)}\r\n                type=\"text\" name=\"Message\"\r\n                placeholder=\"Write a Message\" value={message} />\r\n            <button className=\"button\" type=\"submit\">Submit Message</button>\r\n        </form>\r\n        }\r\n        <button onClick={handleClose}>Close</button>\r\n    </div>\r\n        : <div>Click a Post to View</div>\r\n}\r\n\r\nexport default FeaturedPost;","import React from \"react\";\r\n\r\nconst Home = ({ UserData, user, token }) => {\r\n\r\n    return <>\r\n        <h1 id=\"pageTitle\">Stranger's Things</h1>\r\n        <div id=\"pageIntro\">Welcome to Stranger's Things. If this is your first time, please Register by clicking the Account tab. If you're a returning member, please Log In to Continue!</div>\r\n        <div>{user && token && <h2 className=\"sent-received-messages\">Sent Messages</h2>}</div>\r\n        {UserData.messages?.map((message, idx) => {\r\n            if (message.fromUser._id === UserData._id) {\r\n                return (\r\n                    <div className=\"sent-messages\" key={`${message._id} ${idx}`}>\r\n                        <div>From Post: {message.post.title}</div>\r\n                        <div>{message.content}</div>\r\n                    </div>\r\n                )\r\n            }\r\n        })}\r\n\r\n        <div>{user && token && <h2 className=\"sent-received-messages\">Received Messages</h2>}</div>\r\n        {UserData.messages?.map((message, index) => {\r\n            if (message.fromUser._id !== UserData._id) {\r\n                return (\r\n                    <div className=\"received-messages\" key={index}>\r\n                        <div>From: {message.fromUser.username}</div>\r\n                        <div>Regarding: {message.post.title}</div>\r\n                        <div>{message.content}</div>\r\n                    </div>\r\n                )\r\n            }\r\n        })}\r\n    </>\r\n\r\n}\r\n\r\nexport default Home","import React, { useState } from \"react\";\r\nimport { NavLink, Route, useHistory } from \"react-router-dom\";\r\nimport Account from \"./Account\";\r\nimport Posts from \"./Posts\";\r\nimport FeaturedPost from \"./FeaturedPost\";\r\nimport Home from \"./Home\";\r\n\r\n\r\n\r\nconst App = () => {\r\n\r\n    const [posts, setPosts] = useState([]);\r\n    const [token, setToken] = useState('');\r\n    const [UserData, setUserData] = useState(false);\r\n    const [user, setUser] = useState(false);\r\n    const [featuredPost, setFeaturedPost] = useState('false');\r\n    const [message, setMessage]= useState('');\r\n    const [newMessage, setNewMessage] = useState('');\r\n\r\n\r\n\r\n    return <main>\r\n        <nav>\r\n            <NavLink exact to=\"/\" className=\"navLink\" activeClassName=\"active\">\r\n                Home\r\n            </NavLink>\r\n\r\n            <NavLink exact to=\"/posts\" className=\"navLink\" activeClassName=\"active\">\r\n                Posts\r\n            </NavLink>\r\n       \r\n            <NavLink exact to=\"/login\" className=\"navLink\" activeClassName=\"active\">\r\n                Account\r\n            </NavLink>\r\n        </nav>\r\n\r\n        <Route exact path=\"/\">\r\n            <Home\r\n            UserData= {UserData}\r\n            user={user}\r\n            token={token}\r\n            />\r\n        </Route>\r\n\r\n        <Route path=\"/posts\">\r\n            <Route path=\"/posts/:postId\">\r\n                {token &&\r\n                <FeaturedPost \r\n                user={user}\r\n                token={token}\r\n                featuredPost={featuredPost}\r\n                setFeaturedPost={setFeaturedPost}\r\n                message={message}\r\n                setMessage={setMessage}\r\n                newMessage={newMessage}\r\n                setNewMessage={setNewMessage}\r\n                />\r\n                }\r\n            </Route>\r\n            <Posts\r\n                user={user}\r\n                token={token}\r\n                posts={posts}\r\n                setPosts={setPosts}\r\n                featuredPost = {featuredPost}\r\n                setFeaturedPost = {setFeaturedPost}\r\n            />\r\n        </Route>\r\n\r\n        <Route path=\"/login\">\r\n            <Account\r\n                user={user}\r\n                setUser={setUser}\r\n                token={token}\r\n                setToken={setToken}\r\n                UserData={UserData}\r\n                setUserData={setUserData}\r\n            />\r\n        </Route>\r\n    </main>\r\n}\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { App } from './components';\r\nimport './styles.css';\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n    <App />\r\n    </BrowserRouter>,\r\n    document.getElementById('app')\r\n)"],"sourceRoot":""}